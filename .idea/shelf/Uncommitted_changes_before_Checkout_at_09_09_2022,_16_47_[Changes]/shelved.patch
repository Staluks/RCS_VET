Index: src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import Validation.Validation_DoctorRegistration;\r\nimport Validation.Validation_LogIn;\r\nimport Windows.*;\r\nimport db.DBLogic_Clinic;\r\nimport db.DBLogic_Doctor;\r\nimport db.DBLogic_MedicalHistory;\r\nimport db.DBLogic_Patient;\r\n\r\nimport javax.swing.*;\r\nimport java.awt.event.ActionEvent;\r\nimport java.awt.event.ActionListener;\r\nimport java.sql.SQLException;\r\nimport java.util.ArrayList;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) throws SQLException {\r\n\r\n        LogIn loginmeth = new LogIn();\r\n        Registration regmeth = new Registration();\r\n        ClinicDashboard clindashb = new ClinicDashboard();\r\n        DoctorDashboard docdashb = new DoctorDashboard();\r\n        DoctorRegistration docreg = new DoctorRegistration();\r\n        DBLogic_Clinic dbClinic = new DBLogic_Clinic();\r\n        DBLogic_Doctor dbDoctor = new DBLogic_Doctor();\r\n        DBLogic_Patient dbPatient = new DBLogic_Patient();\r\n        DBLogic_MedicalHistory dbMedHistory = new DBLogic_MedicalHistory();\r\n        Validation_DoctorRegistration docRegVal = new Validation_DoctorRegistration();\r\n        EditDoctorRegistration editDoc = new EditDoctorRegistration();\r\n        Validation_LogIn logInVal = new Validation_LogIn();\r\n        PatientRegistration patReg = new PatientRegistration();\r\n        NewMedicalHistory medHisWin = new NewMedicalHistory();\r\n\r\n\r\n\r\n\r\n\r\n        loginmeth.logInWindow();\r\n\r\n        // to join  the panellogin and panelregistration actionlistener is brought to the main class\r\n        // if user presses create new account a new window will open with the registration form\r\n        loginmeth.regbut.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                loginmeth.panelLogIn.setVisible(false);\r\n                loginmeth.frame.add(regmeth.panelRegistration);\r\n                regmeth.registrationWindow();\r\n            }\r\n        });\r\n\r\n        // if user decides to not create new account, user can press button back and return to the login page\r\n        regmeth.submit.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                try{\r\n                    String name = regmeth.clinicNameText.getText();\r\n                    String email = regmeth.emailText.getText();\r\n                    String phone =regmeth.phoneText.getText();\r\n                    String adress = regmeth.adresText.getText();\r\n                    String regNumber = regmeth.regNumberText.getText();\r\n                    String regAdress = regmeth.regaddressText.getText();\r\n                    String username = regmeth.usernameText.getText();\r\n                    String password = regmeth.passwordText.getText();\r\n                    if (dbClinic.register(name, email, phone, adress, regAdress, regNumber, username, password)){\r\n                        regmeth.panelRegistration.setVisible(false);\r\n                        loginmeth.frame.add(clindashb.panelClinicDashboard);\r\n                        clindashb.panelClinicDashboard.setVisible(true);\r\n                        clindashb.clinicDashboardWindow();\r\n                        // get clinic id by login username and password\r\n                        Integer clinicId = dbClinic.getClinicId(loginmeth.userText.getText(), loginmeth.passwordText.getText());\r\n                        clindashb.clinName.setText(\"Welcome \" + name);\r\n                        // get doctor list in clinic dashboard\r\n                        ArrayList<String> doctorList = dbDoctor.getDoctorList(clinicId);\r\n                        for (String s : doctorList) {\r\n                            // when clinic dashboard opens a list of all associated doctors will appear\r\n                            JList alldoctors = new JList(doctorList.toArray());\r\n                            clindashb.panelClinicDashboard.add(alldoctors);\r\n                            alldoctors.setBounds(30, 120, 600, 400);\r\n                        }\r\n                    }else{\r\n                        // if something is wrong this message will appear\r\n                        regmeth.warning.setText(\"Registration failed! Please check all fields!\");\r\n\r\n                    }\r\n                }catch (SQLException s){\r\n                    s.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n\r\n        regmeth.back.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                regmeth.panelRegistration.setVisible(false);\r\n                loginmeth.frame.add(loginmeth.panelLogIn);\r\n                loginmeth.logInWindow();\r\n            }\r\n        });\r\n\r\n        loginmeth.loginbut.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                // check if input is correct\r\n                 if(logInVal.isValidUsername(loginmeth.userText.getText()) && logInVal.isValidPassword(loginmeth.passwordText.getText())){\r\n                    if (loginmeth.clinic.isSelected()) {\r\n                        try {\r\n                            // get clinic id by login username and password\r\n                            Integer clinicId = dbClinic.getClinicId(loginmeth.userText.getText(), loginmeth.passwordText.getText());\r\n                            // if clinic was found in DB by username and password then log in is successful and clinic dashboard opens\r\n                            if (clinicId > -1) {\r\n                                loginmeth.panelLogIn.setVisible(false);\r\n                                loginmeth.frame.add(clindashb.panelClinicDashboard);\r\n                                clindashb.clinicDashboardWindow();\r\n                                // get clinic name to display in dashboard\r\n                                String clinicName = dbClinic.getName(loginmeth.userText.getText());\r\n                                clindashb.clinName.setText(\"Welcome \" + clinicName);\r\n                                // get doctor list in clinic dashboard\r\n                                ArrayList<String> doctorList = dbDoctor.getDoctorList(clinicId);\r\n                                for (String s : doctorList) {\r\n                                    // when clinic dashboard opens a list of all associated doctors will appear\r\n                                    JList alldoctors = new JList( doctorList.toArray());\r\n                                    clindashb.panelClinicDashboard.add(alldoctors);\r\n                                    alldoctors.setBounds(30, 120, 600, 400);\r\n                                }\r\n                            } else {\r\n                                // if log in failed this message will appear\r\n                                loginmeth.wrongPass.setText(\"Log in failed! Check username or password and try again!\");\r\n                            }\r\n                        } catch (SQLException a) {\r\n                            a.printStackTrace();\r\n                        }\r\n                    }\r\n                    // if doctor is selected, input is validated and checked with DB\r\n                    if (loginmeth.doctor.isSelected()) {\r\n                        try {\r\n                            Integer doctorId = dbDoctor.getDoctorId(loginmeth.userText.getText(), loginmeth.passwordText.getText());\r\n                            if (doctorId > -1) {\r\n                                loginmeth.panelLogIn.setVisible(false);\r\n                                loginmeth.frame.add(docdashb.panelDoctorDashboard);\r\n                                docdashb.doctorDashboardWindow();\r\n                                // display doctors name in dashboard\r\n                                String doctorName = dbDoctor.getName(loginmeth.userText.getText());\r\n                                docdashb.welcome.setText(\"Welcome \" + doctorName);\r\n                                // doctor dashboard will display list of all patients it has registered\r\n                                ArrayList<String> patientList = dbPatient.getPatientList(doctorId);\r\n                                for (String s : patientList) {\r\n                                    // when clinic dashboard opens a list of all associated doctors will appear\r\n                                    JList allPatient = new JList(patientList.toArray());\r\n                                    docdashb.panelDoctorDashboard.add(allPatient);\r\n                                    allPatient.setBounds(30, 120, 600, 400);\r\n                                }\r\n\r\n                            } else {\r\n                                // if log in failed then this message will appear\r\n                                loginmeth.wrongPass.setText(\"Log in failed! Check username or password and try again!\");\r\n                            }\r\n\r\n                        } catch (SQLException b) {\r\n                            b.printStackTrace();\r\n                        }\r\n                    }\r\n\r\n                } else{\r\n                    // if log in failed this message will appear\r\n                    loginmeth.wrongPass.setText(\"Log in failed! Check username or password and try again!\");\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        // to return to the log in window user can pres log out button\r\n        clindashb.logout.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                clindashb.panelClinicDashboard.setVisible(false);\r\n                loginmeth.frame.add(loginmeth.panelLogIn);\r\n                loginmeth.logInWindow();\r\n            }\r\n        });\r\n\r\n        // when logged in as clinic, by pressing add new doctor, a registration form will open\r\n        clindashb.addNewDoc.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                clindashb.panelClinicDashboard.setVisible(false);\r\n                loginmeth.frame.add(docreg.panelDoctorRegistration);\r\n                docreg.doctorRegistrationWindow();\r\n            }\r\n        });\r\n\r\n        // in doctor reg form, by  pressing back, user returns to clinic dashboard\r\n        docreg.back.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                docreg.panelDoctorRegistration.setVisible(false);\r\n                loginmeth.frame.add(clindashb.panelClinicDashboard);\r\n                clindashb.clinicDashboardWindow();\r\n            }\r\n        });\r\n\r\n        // user can log out from doctor dashboard if preses log out button\r\n        docdashb.logout.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                docdashb.panelDoctorDashboard.setVisible(false);\r\n                loginmeth.frame.add(loginmeth.panelLogIn);\r\n                loginmeth.logInWindow();\r\n            }\r\n        });\r\n\r\n        // if everything is filled right clinic can register new doctor for clinic with submit button\r\n        docreg.submit.addActionListener(new ActionListener() {\r\n            // submit button for new doctors registration\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                // gets Clinic ID\r\n                try {\r\n                    int dbClId = dbClinic.getClinicId(loginmeth.userText.getText(), loginmeth.passwordText.getText());\r\n\r\n                    // checks if text fields are filled correct\r\n                    if(docRegVal.isValidRegistration(docreg.docNameText.getText(), docreg.docSurnameText.getText(), docreg.usernameText.getText(), docreg.passwordText.getText(), docreg.reppasswordText.getText(), docreg.personalCodeText.getText(), docreg.certificateText.getText())){\r\n                        // checks if unique needed fields are unique\r\n                        // if unique then fields are registered in doctors table.\r\n                        if(dbDoctor.register(docreg.docNameText.getText(), docreg.docSurnameText.getText(), docreg.usernameText.getText(), docreg.passwordText.getText(), docreg.personalCodeText.getText(), docreg.certificateText.getText(), dbClId, docRegVal.getStatus(docreg.active))){\r\n                            dbDoctor.register(docreg.docNameText.getText(), docreg.docSurnameText.getText(), docreg.usernameText.getText(), docreg.passwordText.getText(), docreg.personalCodeText.getText(), docreg.certificateText.getText(), dbClId, docRegVal.getStatus(docreg.active));\r\n                            docreg.panelDoctorRegistration.setVisible(false);\r\n                            loginmeth.frame.add(clindashb.panelClinicDashboard);\r\n                            clindashb.clinicDashboardWindow();\r\n                            docreg.docNameText.setText(\"\");\r\n                            docreg.docSurnameText.setText(\"\");\r\n                            docreg.usernameText.setText(\"\");\r\n                            docreg.passwordText.setText(\"\");\r\n                            docreg.personalCodeText.setText(\"\");\r\n                            docreg.certificateText.setText(\"\");\r\n                            docreg.reppasswordText.setText(\"\");\r\n                            docreg.active.setSelected(true);\r\n\r\n                        }else{\r\n                            docreg.errorMessage.setText(\"doctor with this username/personal code/certificate Nr. already exists\");\r\n                        }\r\n                    }else{\r\n                        docreg.errorMessage.setText(\"fields are filled wrong\");\r\n                    }\r\n                }catch (SQLException a) {\r\n                    a.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n\r\n        // button to get to doctors edit form\r\n        clindashb.edit.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                //need to select from list\r\n                clindashb.panelClinicDashboard.setVisible(false);\r\n                loginmeth.frame.add(editDoc.panelDoctorRegistration);\r\n                editDoc.editDoctorRegistrationWindow(\"arturs\", \"kalnins\", \"310790-11708\", \"NR0135\");\r\n\r\n            }\r\n        });\r\n\r\n        editDoc.back.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                editDoc.panelDoctorRegistration.setVisible(false);\r\n                loginmeth.frame.add(clindashb.panelClinicDashboard);\r\n                clindashb.clinicDashboardWindow();\r\n            }\r\n        });\r\n\r\n        docdashb.addnewPatient.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                //if user preses button add med his, a new window with a form will open\r\n                docdashb.panelDoctorDashboard.setVisible(false);\r\n                loginmeth.frame.add(patReg.panelPatientRegistration);\r\n                patReg.panelPatientRegistration.setVisible(true);\r\n                patReg.patientRegistrationWindow();\r\n            }\r\n        });\r\n\r\n        patReg.cancel.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                //if user decides to not make new patient, by pressing back, user returns to dashboard\r\n                patReg.panelPatientRegistration.setVisible(false);\r\n                loginmeth.frame.add(docdashb.panelDoctorDashboard);\r\n                docdashb.panelDoctorDashboard.setVisible(true);\r\n                docdashb.doctorDashboardWindow();\r\n            }\r\n        });\r\n\r\n        docdashb.addMedHistory.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n               //doctor opens window for entering new info about patient\r\n                docdashb.panelDoctorDashboard.setVisible(false);\r\n                loginmeth.frame.add(medHisWin.panelNewMedicalHistory);\r\n                medHisWin.panelNewMedicalHistory.setVisible(true);\r\n                medHisWin.newMedicalHistoryWindow();\r\n            }\r\n        });\r\n\r\n        medHisWin.cancel.addActionListener(new ActionListener() {\r\n            @Override\r\n            public void actionPerformed(ActionEvent e) {\r\n                //to return to dashboard user presses back\r\n                medHisWin.panelNewMedicalHistory.setVisible(false);\r\n                loginmeth.frame.add(docdashb.panelDoctorDashboard);\r\n                docdashb.doctorDashboardWindow();\r\n            }\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n        // -------------------------------------------------------------------------\r\n\r\n        //DBLogic_Clinic dbClinic = new DBLogic_Clinic();\r\n\r\n        //boolean s = dbClinic.register(\"clNameE\", \"cl5@email.com\", \"22030409\", \"cl5LegalAddress\", \"cl5PhysicalAddress\", \"cl5RegNumber\", \"clEUsername\", \"clEPass\");\r\n        //System.out.println(s);\r\n        //int clinicId = dbClinic.getClinicId(\"clDUsername\", \"clDPass\");\r\n        //dbClinic.getName(\"clDUsername\");\r\n        //dbClinic.isUsernameUnique(\"clDUsername\");\r\n\r\n        //DBLogic_Doctor dbDoctor = new DBLogic_Doctor();\r\n\r\n        //boolean b = dbDoctor.register(\"NameD10\", \"SurnameD10\", \"usernameD10\", \"passwordD10\", \"999999-99999\", \"CER101010\", 4, \"active\");\r\n        //System.out.println(b);\r\n\r\n        //int id = dbDoctor.getDoctorId(\"usernameD2\", \"passwordD3\");\r\n        //System.out.println(id);\r\n\r\n        //System.out.println(dbDoctor.getName(\"usernameD3\"));\r\n\r\n        //ArrayList<String> list = dbDoctor.getDoctorList(\"4\");\r\n        //for (String s : list) {\r\n        //    System.out.println(s);\r\n        //}\r\n\r\n        //ArrayList<String> list = dbDoctor.getDoctorAllInfoList(14);\r\n        //for (String s : list) {\r\n        //    System.out.println(s);\r\n        //}\r\n        //boolean d = dbDoctor.update(\"NameD8\", \"SurnameD8\", \"888888-88888\", \"CER888\", \"active\",14);\r\n        //System.out.println(d);\r\n\r\n        // -------------------------------------------------------------------------\r\n\r\n        //DBLogic_Patient dbPatient = new DBLogic_Patient();\r\n        //boolean p = dbPatient.register(\"Kroshka\", \"Dog\", \"Chihua-hua\", 2.5f, Date.valueOf(\"2013-03-13\"), \"CH1111\", \"Helena\", \"Luropa\", 10 );\r\n\r\n        //boolean p = dbPatient.register(\"Snowball\", \"Dog\", \"Husky\", 20.5f, Date.valueOf(\"2020-06-15\"), \"CF1234\", \"Milena\", \"Sokolova\", 7 );\r\n        //System.out.println(p);\r\n\r\n        //ArrayList<String> list = dbPatient.getPatientAllInfoList(\"7\");\r\n        //for (String s : list) {\r\n        //    System.out.println(s);\r\n        //}\r\n        //ArrayList<String> list = dbPatient.getPatientList(\"3\");\r\n        //for (String s : list) {\r\n        //    System.out.println(s);\r\n        //}\r\n        //boolean u = dbPatient.update(\"Snowball\", \"Dog\", \"Husky\", 22.5f, Date.valueOf(\"2019-06-15\"), \"CF4321\", \"Alina\", \"Sokolova\", 7, 7);\r\n        //System.out.println(u);\r\n/*\r\n        String[] patient = dbPatient.getPatientNameAndGroup(3);\r\n        System.out.println(patient[0] + \" \" + patient[1]);\r\n        System.out.println(Arrays.toString(patient));\r\n*/\r\n/*\r\n        ArrayList<Integer> patientIds = dbPatient.getPatientIds(4);\r\n        for (int id: patientIds) {\r\n            System.out.println(\"ID: \" + id);\r\n        }\r\n*/\r\n        // -------------------------------------------------------------------------\r\n\r\n//        DBLogic_MedicalHistory dbMedHist = new DBLogic_MedicalHistory();\r\n/*\r\n        boolean regStatus = dbMedHist.register(9, 7, \"diagnosis10\", Date.valueOf(\"1985-08-13\"), \"medical_manipulation10\", \"medicaments10\");\r\n//        boolean regStatus = dbMedHist.register(9, 7, \"diagnosis11\", Date.valueOf(\"2002-02-20\"), null, null);\r\n        System.out.println(regStatus);\r\n*/\r\n/*\r\n        ArrayList<String> medicalHistoryOfPatient = dbMedHist.getMedicalHistoryOfPatient(9);\r\n        for (String el: medicalHistoryOfPatient) {\r\n            System.out.println(\"MH: \" + el);\r\n        }\r\n*/\r\n\r\n        // -------------------------------------------------------------------------\r\n\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Main.java b/src/Main.java
--- a/src/Main.java	(revision 96dd25dc74c4939e38ea3b85ba8bed1c94633d53)
+++ b/src/Main.java	(date 1662728029742)
@@ -32,8 +32,6 @@
 
 
 
-
-
         loginmeth.logInWindow();
 
         // to join  the panellogin and panelregistration actionlistener is brought to the main class
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"9780ae5f-98b3-4822-9dad-9ba910ad16c5\" name=\"Changes\" comment=\"pievilku izmainas\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/ClinicDashboard.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Windows/ClinicDashboard.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/DoctorDashboard.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Windows/DoctorDashboard.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/DoctorRegistration.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Windows/DoctorRegistration.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/EditDoctorRegistration.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Windows/EditDoctorRegistration.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/Fields/Fields_Registration.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Fields/Fields_Registration.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/LogIn.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Windows/LogIn.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/Main.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Main.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/NewMedicalHistory.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Windows/NewMedicalHistory.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/PatientRegistration.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Windows/PatientRegistration.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/Registration.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Registration.java\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Merge.Settings\">\n    <option name=\"BRANCH\" value=\"origin/Develop\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"Develop\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"ProjectId\" id=\"2DFCXm7KvYGPM0Lto5QBDa8vHQB\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Git.Branch.Popup.ShowAllRemotes&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RunManager\" selected=\"Application.Main\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"RCS_VET\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Main2\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main2\" />\n      <module name=\"RCS_VET\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Validation.Main2\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Validation.Main2\" />\n      <module name=\"RCS_VET\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"Validation.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n        <item itemvalue=\"Application.Validation.Main2\" />\n        <item itemvalue=\"Application.Main2\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"9780ae5f-98b3-4822-9dad-9ba910ad16c5\" name=\"Changes\" comment=\"\" />\n      <created>1660285489749</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1660285489749</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"made a doctors registration Form.\">\n      <created>1661242787938</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1661242787938</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"made a  new patient registration Form.\">\n      <created>1662263916622</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662263916622</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"- DBLogicPatient: crud - &quot;update&quot; added\">\n      <created>1662374695116</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662374695116</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"- DBLogicPatient: crud - fixes after review\">\n      <created>1662378636141</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662378636141</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"- merge fixes\">\n      <created>1662385479407</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662385479407</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"- fixes after review\">\n      <created>1662388669904</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662388669904</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"fixed validation for login\">\n      <created>1662502232168</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662502232168</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"nepabeigts\">\n      <created>1662528578817</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662528578817</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"pievilku izmainas\">\n      <created>1662659582513</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662659582513</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"[rcs 14] validation + added order to file/methods/classes names\">\n      <created>1662675334725</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1662675334725</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"11\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"_created medical history form\" />\n    <MESSAGE value=\"-created doctors registration validation\" />\n    <MESSAGE value=\"-fixes\" />\n    <MESSAGE value=\"- DBLogicPatient: crud\" />\n    <MESSAGE value=\"- DBLogicPatient: crud - &quot;update&quot; added\" />\n    <MESSAGE value=\"- DBLogicPatient: crud - fixes after review\" />\n    <MESSAGE value=\"doctor&#10;- method: register (String clinic_id -&gt; int clinic_id)&#10;method: getDoctorList (String clinic_id -&gt; int clinic_id)\" />\n    <MESSAGE value=\"- DBLogicPatient: crud\" />\n    <MESSAGE value=\"- DBLogicPatient: crud - &quot;update&quot; added\" />\n    <MESSAGE value=\"- DBLogicPatient: crud - fixes after review\" />\n    <MESSAGE value=\"- merge fixes\" />\n    <MESSAGE value=\"- fixes after review\" />\n    <MESSAGE value=\"- DBLogicPatient: crud\" />\n    <MESSAGE value=\"- DBLogicPatient: crud - &quot;update&quot; added\" />\n    <MESSAGE value=\"- DBLogicPatient: crud - fixes after review\" />\n    <MESSAGE value=\"doctor&#10;- method: register (String clinic_id -&gt; int clinic_id)&#10;method: getDoctorList (String clinic_id -&gt; int clinic_id)\" />\n    <MESSAGE value=\"- DBLogicPatient: crud\" />\n    <MESSAGE value=\"- DBLogicPatient: crud - &quot;update&quot; added\" />\n    <MESSAGE value=\"- DBLogicPatient: crud - fixes after review\" />\n    <MESSAGE value=\"- merge fixes\" />\n    <MESSAGE value=\"made a  new patient registration Form.\" />\n    <MESSAGE value=\"fixed validation for login\" />\n    <MESSAGE value=\"nepabeigts\" />\n    <MESSAGE value=\"pievilku izmainas\" />\n    <MESSAGE value=\"[rcs 14] validation + added order to file/methods/classes names\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"[rcs 14] validation + added order to file/methods/classes names\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 96dd25dc74c4939e38ea3b85ba8bed1c94633d53)
+++ b/.idea/workspace.xml	(date 1662728030104)
@@ -1,18 +1,9 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="9780ae5f-98b3-4822-9dad-9ba910ad16c5" name="Changes" comment="pievilku izmainas">
+    <list default="true" id="9780ae5f-98b3-4822-9dad-9ba910ad16c5" name="Changes" comment="pieliku help pogu register logam, uzspiezot paradas mesage un hinti ka aizpildit logus">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/ClinicDashboard.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Windows/ClinicDashboard.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/DoctorDashboard.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Windows/DoctorDashboard.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/DoctorRegistration.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Windows/DoctorRegistration.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/EditDoctorRegistration.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Windows/EditDoctorRegistration.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Fields/Fields_Registration.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Fields/Fields_Registration.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/LogIn.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Windows/LogIn.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/NewMedicalHistory.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Windows/NewMedicalHistory.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/PatientRegistration.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Windows/PatientRegistration.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Registration.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Registration.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -168,7 +159,14 @@
       <option name="project" value="LOCAL" />
       <updated>1662675334725</updated>
     </task>
-    <option name="localTasksCounter" value="11" />
+    <task id="LOCAL-00011" summary="pieliku help pogu register logam, uzspiezot paradas mesage un hinti ka aizpildit logus">
+      <created>1662726532328</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1662726532328</updated>
+    </task>
+    <option name="localTasksCounter" value="12" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -183,8 +181,6 @@
     </option>
   </component>
   <component name="VcsManagerConfiguration">
-    <MESSAGE value="_created medical history form" />
-    <MESSAGE value="-created doctors registration validation" />
     <MESSAGE value="-fixes" />
     <MESSAGE value="- DBLogicPatient: crud" />
     <MESSAGE value="- DBLogicPatient: crud - &quot;update&quot; added" />
@@ -208,6 +204,8 @@
     <MESSAGE value="nepabeigts" />
     <MESSAGE value="pievilku izmainas" />
     <MESSAGE value="[rcs 14] validation + added order to file/methods/classes names" />
-    <option name="LAST_COMMIT_MESSAGE" value="[rcs 14] validation + added order to file/methods/classes names" />
+    <MESSAGE value="savienoju logus - add med history, add neew patient" />
+    <MESSAGE value="pieliku help pogu register logam, uzspiezot paradas mesage un hinti ka aizpildit logus" />
+    <option name="LAST_COMMIT_MESSAGE" value="pieliku help pogu register logam, uzspiezot paradas mesage un hinti ka aizpildit logus" />
   </component>
 </project>
\ No newline at end of file
